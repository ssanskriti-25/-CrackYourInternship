Question Link:  https://leetcode.com/problems/valid-parentheses/
Solution :
bool solve(vector<vector<char>>& board, string word, int i, int j, int n, int m, int k){
    if(k>=word.size())  return true;
    if(i<0 || i>=n || j<0 || j>=m || word[k]!=board[i][j] || board[i][j]=='.')  return false;
    board[i][j]='.';
    int a[4]={0,0,-1,1};
    int b[4]={-1,1,0,0};
    bool flag = false;
    for(int idx=0;idx<4;idx++){
          flag= flag || solve(board, word,i+a[idx],j+b[idx],n,m,k+1);
    }
    board[i][j]= word[k];  
    return flag;
}
    bool exist(vector<vector<char>>& board, string word) {
        int n= board.size(), m= board[0].size();
        if(n==0 || word.size()==0)
        return false;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(word[0]==board[i][j])
                if(solve(board, word, i,j, n,m,0))  return true;
            }
        }
        return false;
    }
