Question Link:  https://leetcode.com/problems/4sum/
Solution:
vector<vector<int>> fourSum(vector<int>& nums, int target) {
        sort(nums.begin(), nums.end());
        int n= nums.size(), cnt=0;
        vector<int>tmp;
        vector<vector<int>>ans;
        for(int i=0;i<n-2;i++){
            for(int j=i+1;j<n-1;j++){
                int k=j+1, l= n-1;
                while(k<l){
                long long s= (long long) nums[i]+nums[j]+nums[k]+nums[l];
                    if( s == target){
                        tmp.push_back(nums[i]);
                        tmp.push_back(nums[j]);
                        tmp.push_back(nums[k]);
                        tmp.push_back(nums[l]);
                        if(find (ans.begin(), ans.end(), tmp)==ans.end())
                        ans.push_back(tmp);
                        tmp.clear();
                        k++;
                        l--;
                    }
                    else if(s > target){
                        l--;
                    }
                    else{
                        k++;
                    }
                }
            }
        }
        return ans;
    }
